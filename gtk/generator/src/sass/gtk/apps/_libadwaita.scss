
//
// avatar
//

avatar {
  border-radius: $circular-radius;
  font-weight: bold;

  // The list of colors to generate avatars.
  // Each avatar color is represented by a font color, a gradient start color and a gradient stop color.
  // There are 8 different colors for avtars in the list if you change the number of them you
  // need to update the NUMBER_OF_COLORS in src/adw-avatar.c.
  // The 2D list has this form: ((font-color, gradient-top-color, gradient-bottom-color)).
  $avatarcolorlist: (
   (#cfe1f5, #83b6ec, #337fdc), // blue
   (#caeaf2, #7ad9f1, #0f9ac8), // cyan
   (#cef8d8, #8de6b1, #29ae74), // green
   (#e6f9d7, #b5e98a, #6ab85b), // lime
   (#f9f4e1, #f8e359, #d29d09), // yellow
   (#ffead1, #ffcb62, #d68400), // gold
   (#ffe5c5, #ffa95a, #ed5b00), // orange
   (#f8d2ce, #f78773, #e62d42), // raspberry
   (#fac7de, #e973ab, #e33b6a), // magenta
   (#e7c2e8, #cb78d4, #9945b5), // purple
   (#d5d2f5, #9e91e8, #7a59ca), // violet
   (#f2eade, #e3cf9c, #b08952), // beige
   (#e5d6ca, #be916d, #785336), // brown
   (#d8d7d3, #c0bfbc, #6e6d71), // gray
  );

  @for $i from 1 through length($avatarcolorlist) {
    &.color#{$i} {
      $avatarcolor: nth($avatarcolorlist, $i);
      background-image: linear-gradient(nth($avatarcolor, 2), nth($avatarcolor, 3));
      color: nth($avatarcolor, 1);
    }
  }

  &.contrasted { color: white; }

  &.image { background: none; }
}

//
// Cards
//

.card {
  @at-root %card, & {
    border-radius: $corner-radius;
    box-shadow: none;
    border: 1px solid $border;
    background-clip: border-box;
    background-color: $base;
    color: $text-secondary;
  }
}

//
// preferencespage
//

preferencespage > scrolledwindow > viewport > clamp > box {
  margin: 24px 12px;
  border-spacing: 24px;
}

preferencesgroup > box {
  &, .labels {
    border-spacing: $space-size;
  }

  > box.header:not(.single-line) {
    margin-bottom: $space-size;
  }

  > box.single-line {
    min-height: 34px;
  }

  button.background-preview-button.toggle {
    padding: 0;
    background: none;
    box-shadow: none;
    outline-color: transparent;
    outline-width: 3px;
    outline-offset: $space-size / 2;
    outline-style: solid;

    &, > background-preview {
      border-radius: 6px;
    }

    &:hover {
      outline-color: $fill;
    }

    &:active {
      outline-color: $track;
    }

    &:checked {
      outline-color: $primary;
    }
  }
}

//
// AdwStatusPage
//

statuspage {
  > scrolledwindow > viewport > box {
    margin: 36px $space-size * 2;
    border-spacing: 36px;

    > clamp > box {
      border-spacing: $space-size * 2;

      > .icon {
        -gtk-icon-size: 128px;

        color: gtkalpha(currentColor, 0.55);

        &:disabled {
          opacity: 0.35;
        }

        &:not(:last-child) {
          margin-bottom: 24px;
        }
      }
    }
  }

  &.compact > scrolledwindow > viewport > box {
    margin: 24px 12px;
    border-spacing: 24px;

    > clamp > box {
      > .icon {
        -gtk-icon-size: 96px;

        &:not(:last-child) {
          margin-bottom: $space-size * 2;
        }
      }

      > .title {
        font-size: 18pt;
      }
    }
  }
}

//
// Toasts
//

toast {
  margin: $space-size * 2;
  margin-bottom: $space-size * 4;
  border-radius: $circular-radius;
  border-spacing: $space-size;
  padding: $space-size;
  box-shadow: $shadow-z12, inset 0 1px highlight($osd);
  background-color: $osd;
  color: on($osd);
  border: none;

  &:dir(ltr) { padding-left: $space-size * 2; }
  &:dir(rtl) { padding-right: $space-size * 2; }

  > label {
    margin: 0 $space-size;
  }

  button, button.text-button,
  button.circular.flat { @extend %button-on-dark; }
}

//
// viewswitcher
//

viewswitcher {
  margin: 0;

  &.wide {
    margin-top: $space-size;
    margin-bottom: $space-size;

    button.toggle:checked, button.toggle.flat:checked {
      background-color: $primary;
      color: on($primary);

      &:backdrop { color: on($primary, disabled); }

      indicatorbin.needs-attention > indicator {
        > label { color: $primary; }
        background-color: on($primary);
      }
    }
  }

  &.narrow button.toggle {
    border-radius: 0;
    margin: 0;
    border: none;
  }

  headerbar &.narrow button.toggle {
    border-radius: if($topbar == 'dark' and $theme == 'default' and $variant == 'light', $corner-radius, 0 0 $window-radius $window-radius);
    margin: if($topbar == 'dark' and $theme == 'default' and $variant == 'light', 2px 0, 0);
    min-width: 120px;
    padding: 0;
    background-color: transparent;

    &:checked {
      background-color: $titlebar-primary;
      color: on($titlebar-primary);

      indicator {
        background: on($titlebar-primary);
    
        > label {
          color: $titlebar-primary;
        }
      }

      &:backdrop {
        color: on($titlebar-primary, disabled);
      }
    }

    &:focus { box-shadow: none; }
  }

  button.toggle {
    font-weight: bold;
    padding: 0;
    min-height: 0;
    margin: 0;

    > stack > box {
      &.narrow {
        font-size: 0.75rem;
        padding-top: $space-size + 1px;
        padding-bottom: $space-size - 1px;
        border-spacing: $space-size - 2px;

        > stack > label {
          padding-left: $space-size + 2px;
          padding-right: $space-size + 2px;
        }
      }

      &.wide {
        padding: 0 $space-size * 2;
        border-spacing: $space-size;
      }
    }
  }
}

// AdwViewSwitcherBar
viewswitcherbar actionbar > revealer > box {
  padding: 0;
}

// AdwViewSwitcherTitle
viewswitchertitle {
  margin-top: 0;
  margin-bottom: 0;

  viewswitcher {
    margin-left: $space-size * 2;
    margin-right: $space-size * 2;

    &.narrow {
      margin-top: 0;
      margin-bottom: 0;

      button.toggle {
        > stack > box {
          &.narrow {
            padding-top: 0;
            padding-bottom: 0;
            border-spacing: 0;
          }
        }
      }
    }

    &.wide {
      margin-top: $space-size;
      margin-bottom: $space-size;
    }
  }

  windowtitle {
    margin-top: 0;
    margin-bottom: 0;
  }
}

// AdwIndicatorBin
indicatorbin {
  > indicator, > mask {
    min-width: $space-size;
    min-height: $space-size;
    border-radius: $circular-radius;
  }

  > indicator {
    margin: 1px;
    padding: 0;
    background: gtkalpha(currentColor, .4);

    > label {
      font-size: 0.6rem;
      font-weight: bold;
      padding: 2px 5px;
      color: white;
    }
  }

  > mask {
    padding: 1px;
    background: black;
  }

  &.needs-attention > indicator {
    background-color: $primary;

    > label { color: on($primary); }
  }
}
